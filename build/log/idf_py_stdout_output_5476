[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\Blinky\build\bootloader\esp-idf\esptool_py && C:\Users\PMLS\.espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Users/PMLS/esp/v5.1.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/Blinky/build/bootloader/bootloader.bin"
Bootloader binary size 0x67f0 bytes. 0x810 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/blink.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable blink.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/Blinky/build/blink.bin
[7/8] cmd.exe /C "cd /D D:\Blinky\build\esp-idf\esptool_py && C:\Users\PMLS\.espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Users/PMLS/esp/v5.1.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/Blinky/build/partition_table/partition-table.bin D:/Blinky/build/blink.bin"
blink.bin binary size 0x30e00 bytes. Smallest app partition is 0x100000 bytes. 0xcf200 bytes (81%) free.
[7/8] cmd.exe /C "cd /D C:\Users\PMLS\esp\v5.1.2\esp-idf\components\esptool_py && C:\Users\PMLS\.espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/PMLS/esp/v5.1.2/esp-idf -D SERIAL_TOOL=C:/Users/PMLS/.espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/Users/PMLS/esp/v5.1.2/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/Blinky/build -P C:/Users/PMLS/esp/v5.1.2/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size detect 0x1000 bootloader/bootloader.bin 0x10000 blink.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port COM4
Connecting..........................
Chip is ESP32-D0WD (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: e8:68:e7:23:27:68
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Auto-detected Flash size: 4MB
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00040fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26608 bytes to 16650...
Writing at 0x00001000... (50 %)
Writing at 0x0000768f... (100 %)
Wrote 26608 bytes (16650 compressed) at 0x00001000 in 0.8 seconds (effective 282.4 kbit/s)...
Hash of data verified.
Compressed 200192 bytes to 104054...
Writing at 0x00010000... (14 %)
Writing at 0x0001d71e... (28 %)
Writing at 0x00022dc4... (42 %)
Writing at 0x0002894d... (57 %)
Writing at 0x00031265... (71 %)
Writing at 0x00038f2f... (85 %)
Writing at 0x0003ed3d... (100 %)
Wrote 200192 bytes (104054 compressed) at 0x00010000 in 2.5 seconds (effective 643.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 388.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
